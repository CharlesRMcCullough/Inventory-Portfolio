@page "/ItemEdit/{id:int}/{mode:int}/{productId:int}"
@using InventoryClient.Integrations.Interfaces
@inject IItemIntegration Integration
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Large">
    <MudText Typo="Typo.h5" GutterBottom="true">@_productPrompt</MudText>
    <EditForm Model="@ViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard Class="border-top">
                    <MudCardContent>
                        @if (!IsAdd)
                        {
                            <MudTextField Label="Name" HelperText="Model Name" HelperTextOnFocus="true"
                                          @bind-Value="ViewModel.Name" Disabled="true" For="@(() => ViewModel.Name)"/>
                            <MudTextField Label="Description" Disabled="true" HelperText="Model Description" HelperTextOnFocus="true"
                                          @bind-Value="ViewModel.Description" For="@(() => ViewModel.Description)"/>
                        }
                        <div class="d-flex justify-content-between">
                            <MudTextField Label="Serial Number" Disabled=@IsView HelperText="Serial Number" HelperTextOnFocus="true"
                                          @bind-Value="ViewModel.SerialNumber" For="@(() => ViewModel.Description)"/>
                            <MudTextField Label="Tag Id" Disabled=@IsView HelperText="Scan or key Tag Id" HelperTextOnFocus="true"
                                          @bind-Value="ViewModel.TagId" For="@(() => ViewModel.Description)"/>
                        </div>
                        <MudNumericField HideSpinButtons="true" @bind-Value="ViewModel.Price" Label="Price" Variant="Variant.Text"
                                         HelperText="Item Price" Disabled="@IsView"/>
                        @if (!IsAdd)
                        {
                            <MudCard Class="mt-5 mb-5" Outlined="true">
                                <MudCardHeader>
                                    <MudText Typo="Typo.body1">Check out Item</MudText>
                                </MudCardHeader>
                                <MudCardContent >
                                    <MudDatePicker Label="Checkout Date" Disabled="!IsEdit" @bind-Date="ViewModel.CheckOutDate" Placeholder="Checkout Date"/>
                                    <MudDatePicker Label="Expected Return Date" Disabled="!IsEdit" @bind-Date="ViewModel.CheckInDate" Placeholder="Expected Return Date"/>
                                    <MudTextField Label="Check Out Location" HelperText="Location of item when checked out" HelperTextOnFocus="true"
                                                  Disabled=@IsView @bind-Value="ViewModel.Location" For="@(() => ViewModel.Location)"/>

                                    @if (!IsView)
                                    {
                                        if (ViewModel.IsCheckedOut)
                                        {
                                            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary"
                                                       Class="ml-auto" OnClick="@OnCheckIn">Check In</MudButton>
                                        }
                                        else
                                        {
                                            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary"
                                                       Class="ml-auto" OnClick="@OnCheckOut">Check Out</MudButton>
                                        }
                                    }

                                </MudCardContent>
                                <MudTextField Label="Check out History" ReadOnly="true" HelperTextOnFocus="true"
                                              Disabled=@IsView @bind-Value="ViewModel.History" For="@(() => ViewModel.History)"/>
                            </MudCard>
                        }

                        <MudTextField Label="Notes" Disabled=@IsView HelperText="Notes" HelperTextOnFocus="true"
                                      @bind-Value="ViewModel.Notes" For="@(() => ViewModel.Notes)"/>
                        @if (!IsAdd)
                        {
                            <MudSelect @bind-Value="ViewModel.Status"
                                       Label="Status"
                                       Disabled="IsAdd || IsView"
                                       HelperText="Status of Item"
                                       HelperTextOnFocus="true">

                                <MudSelectItem Value="true">Enabled</MudSelectItem>
                                <MudSelectItem Value="false">Disable</MudSelectItem>
                            </MudSelect>
                        }
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Default"
                                   Class="ml-auto" OnClick="@OnCancel">
                            Cancel
                        </MudButton>
                        @if (!IsView)
                        {
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
                        }

                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
    <MudOverlay Visible="_isLoading" DarkBackground="false" Absolute="true">
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    </MudOverlay>
</MudContainer>