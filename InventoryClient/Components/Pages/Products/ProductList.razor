@page "/Products"
@using InventoryClient.Integrations.Interfaces
@using InventoryClient.Components.Dropdowns
@inject NavigationManager Navigation
@inject IProductIntegration Integration
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<PageTitle>Products</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudText Typo="Typo.h4" GutterBottom="true">Products</MudText>
    <MudGrid Spacing="14" Class="mt-4">
        <MudItem xs="10">
            <MudGrid>
                <MudItem xs="6">
                    <CategoryDropdown
                        Disabled="false"
                        Search="true"
                        SelectedIndex="@_selectedCategory"
                        OnCategoryChanged="OnCategoryChange"/>
                </MudItem>
                <MudItem xs="12">
                    
                    <MudDataGrid @ref="@_grid"  Items="@Products" RowsPerPage="10">
                        <ToolBarContent>
                            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Class="float-right mb-5" 
                                       OnClick="OnAdd">Add Product</MudButton>
                            <MudSpacer />
                            <MudTextField T="string" @bind-Value="_searchText" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </ToolBarContent>
                        <Columns>
                            <PropertyColumn Property="x => x.CategoryName" Title="Category" Filterable="true"/>
                            <PropertyColumn Property="x => x.MakeName" Title="Make" Filterable="false"/>
                            <PropertyColumn Property="x => x.ModelName" Title="Model" Filterable="false"/>
                            <PropertyColumn Property="x => x.Name" Title="Name" Filterable="true"/>
                            <PropertyColumn Property="x => x.Description" Title="Description"/>
                            <PropertyColumn Property="x => x.Quantity" Title="Quantity"/>
                            <PropertyColumn Property="x => x.AvailableQuantity" Title="Available"/>

                            <TemplateColumn CellClass="d-flex justify-end">
                                <CellTemplate>
                                    <MudIconButton Size="@Size.Small" Class="mr-3" Icon="@Icons.Material.Outlined.Visibility" OnClick="() => OnView(context.Item.Id)"/>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="() => OnEdit(context.Item.Id)"/>
                                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" OnClick="(async () => await OnDeleteAsync(context.Item.Id))"/>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                        <PagerContent>
                            <div class="d-flex flex-column align-center">
                                <MudPagination Color="Color.Primary" Count="@((_grid.GetFilteredItemsCount() + _grid.RowsPerPage - 1) / _grid.RowsPerPage)" @bind-Selected="@_selectedPage"/>
                            </div>
                        </PagerContent>
                    </MudDataGrid>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
    <MudOverlay Visible="_isLoading" DarkBackground="false" Absolute="true">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" />
    </MudOverlay>
</MudContainer>
