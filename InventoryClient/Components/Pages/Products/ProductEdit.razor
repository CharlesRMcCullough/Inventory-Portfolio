@page "/ProductEdit/{id:int}/{mode:int}"
@using InventoryClient.Integrations.Interfaces
@using InventoryClient.Components.Dropdowns
@inject IProductIntegration Integration
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Large">
    <MudText Typo="Typo.h5" GutterBottom="true">@_productPrompt</MudText>
    <EditForm Model="@ViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <CategoryDropdown
                            Disabled="CategoryDisabled || IsView"
                            Required="true"
                            Search="false"
                            SelectedIndex="@ViewModel.CategoryId"
                            OnCategoryChanged="OnCategoryChange"/>
                        <MakeDropdown
                            Disabled="MakeDisabled || IsView"
                            Required="true"
                            Search="false"
                            CategoryId="@ViewModel.CategoryId"
                            SelectedIndex="@ViewModel.MakeId"
                            OnMakeChanged="OnMakeChange"/>
                        <ModelDropdown
                            Disabled="ModelDisabled || IsView"
                            Required="true"
                            Search="false"
                            MakeId="@ViewModel.MakeId"
                            SelectedIndex="@ViewModel.ModelId"
                            OnModelChanged="OnModelChange"/>
                        <MudTextField Label="Name" HelperText="Model Name" HelperTextOnFocus="true"
                                      @bind-Value="ViewModel.Name" Disabled=@IsView For="@(() => ViewModel.Name)"/>
                        <MudTextField Label="Description" Disabled=@IsView HelperText="Model Description" HelperTextOnFocus="true"
                                      Class="mt-3 mb-5" @bind-Value="ViewModel.Description" For="@(() => ViewModel.Description)"/>
                        @if (!IsAdd)
                        {
                            <div class="d-flex justify-content-between">
                                <MudNumericField HideSpinButtons="true" @bind-Value="ViewModel.Quantity" Label="Quantity" Variant="Variant.Text"
                                                 HelperText="Product Quantity" HelperTextOnFocus="true" ReadOnly="true"/>
                                <MudNumericField HideSpinButtons="true" @bind-Value="ViewModel.AvailableQuantity" Label="Units Available" Variant="Variant.Text"
                                                 HelperText="Units Available" HelperTextOnFocus="true" ReadOnly="true"/>
                            </div>
                            <MudTextField Label="Notes" Disabled=@IsView HelperText="Notes" HelperTextOnFocus="true"
                                          Class="mt-3 mb-5" @bind-Value="ViewModel.Notes" For="@(() => ViewModel.Notes)"/>

                            <MudSelect @bind-Value="ViewModel.Status"
                                       Label="Status"
                                       Disabled="IsAdd || IsView"
                                       HelperText="Status of Product"
                                       HelperTextOnFocus="true">

                                <MudSelectItem Value="true">Enabled</MudSelectItem>
                                <MudSelectItem Value="false">Disable</MudSelectItem>
                            </MudSelect>
                        }
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Default"
                                   Class="ml-auto" OnClick="@OnCancel">
                            Cancel
                        </MudButton>
                        @if (!IsView)
                        {
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
    <MudOverlay Visible="_isLoading" DarkBackground="false" Absolute="true">
        <MudProgressCircular Color="Color.Info" Indeterminate="true"/>
    </MudOverlay>
</MudContainer>